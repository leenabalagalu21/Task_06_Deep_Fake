# -*- coding: utf-8 -*-
"""Audio file creation python script.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JuP-itrxkr3lv4ueOEWRdS6kIVo1Qbxt
"""



!python --version

# Install (free)
!apt -y install ffmpeg >/dev/null
!pip -q install edge-tts pydub nest_asyncio

# script
dialogue = [

    ("HOST", "This interview is a dramatized, AI-generated piece created for academic purposes. Voices are synthetic; no real individuals were recorded. Statistics are based on Syracuse Women’s Lacrosse 2025 data and prior analysis. This is not affiliated with Syracuse University."),

    ("HOST", "Hey everybody, we are on campus talking Syracuse Women's Lacrosse. Big picture first—how did the season go?"),
    ("ANALYST", "In short, nineteen games and a ten and nine finish. Lots of tight battles, several decided by just a couple goals."),

    ("HOST", "So, close enough to be exciting and stressful at the same time. Who carried the scoring load?"),
    ("ANALYST", "Emma Muchnick led the team with thirty four goals. And Emma Ward was the engine, forty six assists and the best points per game among regulars at four point zero."),

    ("HOST", "That is a lot of table setting. Anyone with eye popping per game numbers?"),
    ("ANALYST", "Olivia Adamson. Smaller sample, but she averaged three point three three goals per game."),

    ("HOST", "Alright, give me a moment I would show my friends."),
    ("ANALYST", "Closest game, Stanford, fourteen to thirteen on March seventh. Biggest outburst, UAlbany, twenty one goals in a twenty one to nine win."),

    ("HOST", "From heartbreak to highlight reel. You mentioned tight margins—how many slipped away?"),
    ("ANALYST", "Five losses were by three goals or fewer."),

    ("HOST", "If I am a coach, what is the lever, score a touch more or lock it down defensively?"),
    ("ANALYST", "We ran a simple what if. Add one Syracuse goal or remove one opponent goal in those narrow games and about three flip either way. There is also a clue, shots and goals have a very strong relationship, roughly zero point nine seven. That suggests a slight edge to offense, create more quality shots."),

    ("HOST", "Translation, shoot more and score more, but smart shots."),
    ("ANALYST", "Exactly, volume plus quality."),

    ("HOST", "Name me one game changer for next season."),
    ("ANALYST", "Emma Ward. Because she creates and scores, a small bump in her efficiency can swing those one score games."),

    ("HOST", "Lightning round, one stat fans should memorize?"),
    ("ANALYST", "Ten and nine overall and five narrow losses. That is where the upside lives."),

    ("HOST", "One wish for the offseason?"),
    ("ANALYST", "Sharpen shot creation: tempo, spacing, and decision making in the eight meter."),

    ("HOST", "There it is, nineteen games, ten and nine, stars in Muchnick and Ward, and a path forward built on smarter, more frequent looks at goal. Thanks for breaking it down."),
    ("ANALYST", "Anytime. See you next season."),

    ("HOST", "Quick reminder—this segment was AI-generated for academic research.")
]

VOICE_HOST = "en-US-AriaNeural"
VOICE_ANALYST = "en-US-GuyNeural"

# synth + stitch
import os, asyncio
import nest_asyncio; nest_asyncio.apply()
from pydub import AudioSegment
from pydub.effects import normalize
import edge_tts

os.makedirs("clips", exist_ok=True)

async def synth_line(role, text, idx):
    voice = VOICE_HOST if role == "HOST" else VOICE_ANALYST
    out = f"clips/{idx:02d}_{role}.mp3"
    await edge_tts.Communicate(text=text, voice=voice).save(out)
    return out

async def build():
    files = []
    for i, (role, text) in enumerate(dialogue, 1):
        files.append(await synth_line(role, text, i))
    # stitch with ~700 ms gap
    silence = AudioSegment.silent(duration=700)
    final = AudioSegment.silent(duration=0)
    for f in files:
        seg = normalize(AudioSegment.from_file(f))
        final += seg + silence
    final.export("Syracuse_Interview_2025.mp3", format="mp3", bitrate="192k")

# TOP-LEVEL AWAIT
await build()

from IPython.display import Audio, display
display(Audio("Syracuse_Interview_2025.mp3"))